dnl configure.in
dnl
dnl Copyright (C) 2007-2016 Devaev Maxim
dnl See file "LICENSE" for details
dnl
dnl #####


AC_INIT
AC_PREFIX_DEFAULT(/usr)
AC_DEFUN([AC_DATAROOTDIR_CHECKED])

echo "+---------------------------------------------------------------------+"
echo "|     Welcome to LightLang - Languages software package for Linux     |"
echo "+---------------------------------------------------------------------+"

dnl ##### Functions ######

AC_DEFUN(AC_PYTHON_COMMAND, [
 	AC_MSG_CHECKING([python "$1"])
	python -c "$1"
	if [[ "$?" != "0" ]]; then AC_MSG_NOTICE([$2]); AC_MSG_ERROR([python command error], 1)
	else AC_MSG_RESULT(ok); fi
])

AC_DEFUN(AC_X_PATH_PROG, [
	AC_PATH_PROG([$1], [$2], [$3], [$4])
	if [[ "$$1" = "no" ]]; then AC_MSG_ERROR([[$2] is not found], 1); fi
])


dnl ##### Options #####

AC_ARG_WITH(default_config, [AC_HELP_STRING([--with-default-config],
	[set default configuration, default: normal, available: normal, console])],
	AC_SUBST(DEFAULT_CONFIG, [$withval]), AC_SUBST(DEFAULT_CONFIG, normal))
if [[ "$DEFAULT_CONFIG" = "normal" ]]; then
	AC_SUBST(DEFAULT_AUDIO_PLAYER, play)
	AC_SUBST(DEFAULT_GUI_FLAG, yes)
	AC_SUBST(DEFAULT_PYTHON_XLIB_FLAG, yes)
elif [[ "$DEFAULT_CONFIG" = "console" ]]; then
	AC_SUBST(DEFAULT_AUDIO_PLAYER, play)
	AC_SUBST(DEFAULT_GUI_FLAG, no)
	AC_SUBST(DEFAULT_PYTHON_XLIB_FLAG, no)
else
	AC_MSG_WARN([unknown configure preset [$DEFAULT_CONFIG], using preset "normal"])
	AC_SUBST(DEFAULT_CONFIG, normal)
	AC_SUBST(DEFAULT_AUDIO_PLAYER, play)
	AC_SUBST(DEFAULT_GUI_FLAG, yes)
	AC_SUBST(DEFAULT_PYTHON_XLIB_FLAG, yes)
fi

AC_ARG_WITH(audio_player, [AC_HELP_STRING([--with-audio-player],
	[set audio player, default: play, but must be changed by default configuration])],
	AC_SUBST(AUDIO_PLAYER, [$withval]), AC_SUBST(AUDIO_PLAYER, [$DEFAULT_AUDIO_PLAYER]))

AC_ARG_WITH(gui_flag, [AC_HELP_STRING([--with-gui-flag],
	[enable or disable GUI, default: yes, but must be changed by default configuration])],
	AC_SUBST(GUI_FLAG, [$withval]), AC_SUBST(GUI_FLAG, [$DEFAULT_GUI_FLAG]))

AC_ARG_WITH(python_xlib_flag, [AC_HELP_STRING([--with-python-xlib-flag],
	[enable or disable python-xlib, default: yes, but must be changed by default configuration])],
	AC_SUBST(PYTHON_XLIB_FLAG, [$withval]), AC_SUBST(PYTHON_XLIB_FLAG, [$DEFAULT_PYTHON_XLIB_FLAG]))


dnl ##### Checkings #####

AC_PROG_CC
AC_PROG_INSTALL
CFLAGS+=" --pedantic --std=c9x -Wall"

AC_HEADER_STDC
AC_CHECK_HEADER(stdio.h)
AC_CHECK_HEADER(stdlib.h)
AC_CHECK_HEADER(string.h)
AC_CHECK_HEADER(ctype.h)
AC_CHECK_HEADER(wchar.h)
AC_CHECK_HEADER(wctype.h)
AC_CHECK_HEADER(getopt.h)
AC_CHECK_HEADER(time.h)
AC_CHECK_HEADER(errno.h)
AC_CHECK_HEADER(stdbool.h)
AC_CHECK_HEADER(dirent.h)
AC_CHECK_HEADER(sys/types.h)
AC_CHECK_HEADER(sys/stat.h)
AC_CHECK_HEADER(sys/ioctl.h)
AC_CHECK_HEADER(limits.h)
AC_CHECK_HEADER(unistd.h)
AC_CHECK_HEADER(fcntl.h)
AC_CHECK_HEADER(locale.h)
AC_CHECK_HEADER(langinfo.h)

AC_X_PATH_PROG(SH_PROG, sh, sh, [$PATH])
AC_X_PATH_PROG(CC_PROG, [$CC], [$CC], [$PATH])
AC_X_PATH_PROG(MKDIR_PROG, mkdir, mkdir, [$PATH])
AC_X_PATH_PROG(CP_PROG, cp, cp, [$PATH])
AC_X_PATH_PROG(LN_PROG, ln, ln, [$PATH])
AC_X_PATH_PROG(MV_PROG, mv, mv, [$PATH])
AC_X_PATH_PROG(RM_PROG, rm, rm, [$PATH])
AC_X_PATH_PROG(CAT_PROG, cat, cat, [$PATH])
AC_X_PATH_PROG(LS_PROG, ls, ls, [$PATH])
AC_X_PATH_PROG(CD_PROG, cd, cd, [$PATH])
AC_X_PATH_PROG(CHMOD_PROG, chmod, chmod, [$PATH])
AC_X_PATH_PROG(TEST_PROG, test, test, [$PATH])
AC_X_PATH_PROG(FIND_PROG, find, no, [$PATH])
AC_X_PATH_PROG(TAR_PROG, tar, no, [$PATH])
AC_X_PATH_PROG(BZIP2_PROG, bzip2, no, [$PATH])
AC_X_PATH_PROG(SED_PROG, sed, no, [$PATH])
AC_X_PATH_PROG(MKTEMP_PROG, mktemp, no, [$PATH])
AC_X_PATH_PROG(PYTHON_PROG, python, no, [$PATH])
AC_X_PATH_PROG(AUDIO_PLAYER_PROG, [$AUDIO_PLAYER], no, [$PATH])

AC_PYTHON_COMMAND([import sys])
AC_PYTHON_COMMAND([import os])
AC_PYTHON_COMMAND([import getopt])
AC_PYTHON_COMMAND([import traceback])
AC_PYTHON_COMMAND([import inspect])
AC_PYTHON_COMMAND([import ftplib])
AC_PYTHON_COMMAND([import tempfile])
AC_PYTHON_COMMAND([import struct])
AC_PYTHON_COMMAND([import fcntl])
AC_PYTHON_COMMAND([import termios])

if [[ "$GUI_FLAG" = "yes" ]]; then
	if [[ "$PYTHON_XLIB_FLAG" = "yes" ]]; then
		AC_PYTHON_COMMAND([import Xlib], [python-xlib library is not found, please, install it and try again])
	fi

	AC_PYTHON_COMMAND([import PyQt4], [PyQt4 library is not found, please, install it and try again])
	AC_PYTHON_COMMAND([from PyQt4 import QtCore], [You PyQt4 library is buggy, missed module QtCore])
	AC_PYTHON_COMMAND([from PyQt4 import QtGui], [You PyQt4 library is buggy, missed module QtGui])
	AC_PYTHON_COMMAND([from PyQt4 import QtXml], [You PyQt4 library is buggy, missed module QtXml])
	AC_PYTHON_COMMAND([from PyQt4 import QtNetwork], [You PyQt4 library is buggy, missed module QtNetwork])
fi


dnl ##### Values hack #####

AC_OUTPUT()
AC_SUBST(prefix, `eval echo \`echo $prefix\``)
AC_SUBST(exec_prefix, `eval echo \`echo $exec_prefix\``)
AC_SUBST(bindir, `eval echo \`echo $bindir\``)
AC_SUBST(libdir, `eval echo \`echo $libdir\``)
AC_SUBST(datarootdir, `eval echo \`echo $datarootdir\``)
AC_SUBST(mandir, `eval echo \`echo $mandir\``)
AC_SUBST(docdir, `eval echo \`echo $docdir\``)


dnl ##### Pkg-config values #####

if [[ "$GUI_FLAG" = "yes" ]]; then
	AC_SUBST(QT_TR_DIR, `pkg-config Qt --variable=translationdir`)
fi


dnl ##### Outputs #####

AC_OUTPUT([Makefile
apps/Makefile apps/sl/Makefile apps/llrepo/Makefile apps/xsl/Makefile
resources/Makefile resources/dicts/Makefile resources/sounds/Makefile
pkg/Makefile
docs/Makefile docs/html/Makefile docs/html/en/Makefile docs/html/ru/Makefile
docs/text/Makefile docs/text/en/Makefile docs/text/ru/Makefile
docs/man/Makefile docs/man/en/Makefile docs/man/ru/Makefile
download.py
apps/sl/src/config.h apps/xsl/src/xsl/Config.py apps/xsl/src/xsl/xsl.py apps/llrepo/src/llrepo.py
pkg/pkg/lightlang.pc],
[chmod +x download.py])


dnl ##### Information #####

echo "+---------------------------------------------------------------------+"
echo "  Default config      :" $DEFAULT_CONFIG
echo "  Audio player        :" $AUDIO_PLAYER
echo "  prefix              :" $prefix
echo "  exec_prefix         :" $exec_prefix
echo "  bindir              :" $bindir
echo "  libdir              :" $libdir
echo "  datarootdir         :" $datarootdir
echo "  mandir              :" $mandir
echo "  docdir              :" $docdir
if [[ "$GUI_FLAG" = "yes" ]]; then
	echo "  Qt translations dir :" $QT_TR_DIR
fi
echo "+---------------------------------------------------------------------+"
echo "  CFLAGS              :" $CFLAGS
echo "  GUI support         :" $GUI_FLAG
if [[ "$GUI_FLAG" = "yes" ]]; then
	echo "+---------------------------------------------------------------------+"
	if [[ "$PYTHON_XLIB_FLAG" = "yes" ]]; then
		echo "  python-xlib version :" `python -c "import Xlib; print Xlib.__version_string__"`
	fi
	echo "  Qt4 version         :" `python -c "from PyQt4 import Qt; print Qt.QT_VERSION_STR"`
	echo "  PyQt4 version       :" `python -c "from PyQt4 import Qt; print Qt.PYQT_VERSION_STR"`
fi
echo "+---------------------------------------------------------------------+"
echo "  OK. Type \"make\" to compile the package."
echo "+---------------------------------------------------------------------+"

